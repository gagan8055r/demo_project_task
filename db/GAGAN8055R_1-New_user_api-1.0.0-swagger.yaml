openapi: 3.0.0
info:
  version: 1.0.0
  title: phone_users_api
  description: Crud operations for created endpoint on database and testing them
  termsOfService: https://localhost:4001
  contact:
    name: GAGAN
    url: localhost
    email: gagan8055r@gmail.com
    
  license:
    name: SmartBear License
    url: http://license.foo.com
servers: 
  - url: http://localhost:4001
    description: Phone users API
paths:
  /all-users:
    get:
      summary: Get all phone users
      responses:
        '200':
          description: Successfully retrieved phone users
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserArray'
  /single-user/{id}:
    get:
      summary: Get a single phone user by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successfully retrieved the phone user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
  /create-user:
    post:
      summary: Create a new phone user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUser'
      responses:
        '201':
          description: User created successfully
        '404':
          description: Server-side error
  /update-user/{id}:
    patch:
      summary: Update a phone user partially
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartialUser'
      responses:
        '200':
          description: User updated successfully
        '500':
          description: Error updating user
  /update-f-user/{id}:
    put:
      summary: Update a phone user fully
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User replaced successfully
        '500':
          description: Error replacing user
  /delete-user/{id}:
    delete:
      summary: Delete a phone user by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: User deleted successfully
        '500':
          description: Internal Server Error
  /batch-users-req:
    get:
      summary: Get a batch of phone users
      parameters:
        - in: query
          name: pg
          required: true
          schema:
            type: integer
          description: Page number
        - in: query
          name: lm
          required: true
          schema:
            type: integer
          description: Limit
      responses:
        '200':
          description: Successfully retrieved phone users batch
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserArray'
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        email:
          type: string
        phone_number:
          type: string
    UserArray:
      type: array
      items:
        $ref: '#/components/schemas/User'
    NewUser:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        phone_number:
          type: string
        status:
          type: boolean
    PartialUser:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        phone_number:
          type: string
        status:
          type: boolean